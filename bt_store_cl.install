<?php

/**
 * @file
 * Install, update and uninstall functions for the wca installation profile.
 */

use Drupal\user\Entity\User;
use Drupal\user\RoleInterface;
use Drupal\path_alias\Entity\PathAlias;
use Drupal\user\UserInterface;
use Drupal\node\Entity\Node;
use Drupal\Core\Config\FileStorage;
use Drupal\menu_link_content\Entity\MenuLinkContent;

/**
 * Implements hook_install().
 *
 * Perform actions to set up the site for this profile.
 *
 * @see system_install()
 */
function bt_store_cl_install() {
  // Install Camaleon theme.
  Drupal::service('theme_installer')->install(['camaleon']);
  
  $theme_config = Drupal::configFactory()->getEditable('system.theme');
  // Set admin theme.
  $theme_config->set('admin', 'claro');
  // Set default theme.
  $theme_config->set('default', 'camaleon');
  $theme_config->save(TRUE);
  
  // Alias URL.
  $paths = [
    '/block/add/bt_images_gallery' => '/app/sitioweb/bloques/agregar/galeria-imagenes',
    '/block/add/bt_image' => '/app/sitioweb/bloques/agregar/imagen',
    '/block/add/bt_pagina_basica' => '/app/sitioweb/bloques/agregar/pagina-basica',
    '/block/add/bt_pagina_portafolio' => '/app/sitioweb/bloques/agregar/pagina-portafolio',
    '/block/add/bt_blog_publication' => '/app/sitioweb/bloques/agregar/publicacion-blog',
    '/block/add/bt_video' => '/app/sitioweb/bloques/agregar/video',
  ];

  foreach ($paths as $path => $alias) {
    $path_alias = PathAlias::create([
      'path' => $path,
      'alias' => $alias,
      'langcode' => 'es'
    ]);
    $path_alias->save();
  }

  // Allow visitor account creation with administrative approval.
  $user_settings = \Drupal::configFactory()->getEditable('user.settings');
  $user_settings->set('register', UserInterface::REGISTER_VISITORS_ADMINISTRATIVE_APPROVAL)->save(TRUE);

  $anonymous = [
    'access comments',
    'access content',
    'access polls',
    'access site-wide contact form',
    'cancel own vote',
    'edit own comments',
    'hide format selection for comment',
    'hide format tips',
    'hide more format tips link',
    'never autoplay videos',
    'post comments',
    'search content',
    'use text format bt_minimal_redaction',
    'use text format restricted_html',
    'view media',
    'view multifield', 
  ];

  $authenticate = [
    'access content',
    'access comments',
    'access site-wide contact form',
    'access shortcuts',
    'search content',
    'hide format tips',
    'hide more format tips link',
    'hide format selection for comment',
    'edit own comments',
    'post comments',
    'use text format bt_minimal_redaction',
    'view media',
    'access toolbar',
    'never autoplay videos',
    'access tour',
    'view the administration theme',
    'cancel own vote',
    'access polls',
    'change own password',
    'view my_account in toolbar',
    'cancel account',
  ];

  // Add permissions to the role bt_edit_publish_content.
  $role = 'user.role.bt_edit_publish_content';
  $new_permissions = [
    'use editorial transition archive',
    'use editorial transition archived_draft',
    'use editorial transition archived_published',
    'use editorial transition create_new_draft',
    'use editorial transition publish',
  ];

  $permissions = Drupal::configFactory()->get($role)->get('permissions');
  $config = Drupal::configFactory()->getEditable($role);
  $config->set('permissions', array_merge($permissions, $new_permissions));
  $config->save();

  // Enable default permissions for system roles.
  user_role_grant_permissions(RoleInterface::ANONYMOUS_ID, $anonymous);
  user_role_grant_permissions(RoleInterface::AUTHENTICATED_ID, $authenticate);

  // Assign user 1 the "administrador" role.
  $admin_roles = [
    'administrator',
    'bt_admin_application',
    'bt_admin_blocks',
    'bt_create_content',
    'bt_add_forum_discussion',
    'bt_delete_own_content',
    'bt_use_full_redaction_format',
    'bt_use_simple_redaction_format',
    'bt_edit_publish_content',
    'bt_moderate_comments'
  ];

  $user = User::load(1);
  $user->roles = $admin_roles;
  $user->save();

  $personas = [
    'bt_web_admin',
    'bt_content_creator',
    'bt_content_editor_publisher',
    'bt_commercial_executive',
    'bt_contacts_activities_manager',
    'bt_commerce_administrator',
    'bt_store_manager',
  ];
  $user->set('personas', $personas);
  $user->save();
  
  // Enable the admin theme in edit content.
  Drupal::configFactory()->getEditable('node.settings')->set('use_admin_theme', TRUE)->save(TRUE);

  Drupal::configFactory()->getEditable('system.date')->set('first_day', 1)->save(TRUE);

  // Create pages.
  $pages = [
    '403' => [
      'name' => 'page.403',
      'route' => '/node/1'
    ],
    '404' => [
      'name' => 'page.404',
      'route' => '/node/2'
    ],
    'Inicio' => [
      'name' => 'page.front',
      'route' => '/node/3'
    ]
  ];

  foreach ($pages as $title => $conf) {
    $node = Node::create([
      'type' => 'bt_basic_page',
      'title' => $title,
      'uid' => 1,
    ]);
    $node->save();

    // Add page to site config.
    \Drupal::configFactory()
    ->getEditable('system.site')
    ->set($conf['name'], $conf['route'])
    ->save();
  }

  $pages = ['Tienda', 'ArtÃ­culos', 'Contacto'];
  foreach ($pages as $title) {
    $node = Node::create([
      'type' => 'bt_basic_page',
      'title' => $title,
      'uid' => 1,
    ]);
    $node->save();
  }

  // Add menu links.
  $menu_link = MenuLinkContent::create([
    'title' => 'Home',
    'link' => ['uri' => 'internal:/node/3'],
    'menu_name' => 'main',
    'expanded' => TRUE,
  ]);
  $menu_link->save();

  $menu_link = MenuLinkContent::create([
    'title' => 'Contacto',
    'link' => ['uri' => 'internal:/node/6'],
    'menu_name' => 'footer',
    'expanded' => TRUE,
  ]);
  $menu_link->save();

  // We install some menu links, so we have to rebuild the router, to ensure the
  // menu links are valid.
  Drupal::service('router.builder')->rebuildIfNeeded();

  // Replace default user's form display.
  $config_factory = \Drupal::configFactory();

  $confs = [
    'core.date_format.medium',
    'core.date_format.short',
    'core.entity_form_display.commerce_product.default.default',
    'core.entity_form_display.node.blog_post.default',
    'core.entity_form_display.node.bt_basic_page.default',
    'core.entity_view_display.commerce_product.default.default',
    'core.entity_view_display.media.bt_image.bt_block',
    'core.entity_view_display.node.bt_article.full',
    'core.entity_view_display.node.blog_post.default',
    'core.entity_view_display.node.blog_post.full',
    'core.entity_view_display.node.blog_post.teaser',
    'core.entity_form_display.user.user.default',
    'core.entity_view_display.media.bt_image.bt_full_viewport',
    'core.entity_view_display.media.bt_image.bt_mid_landscape',
    'views.view.blog',
  ];

  foreach ($confs as $conf) {
    $config_factory->getEditable($conf)->delete();
    bt_store_cl_import_single_config($conf);
  }
}

/**
 * Helper function to import single config file.
 *
 * @param string $config_name
 *   The name of the config item to import from the config sync folder.
 */
function bt_store_cl_import_single_config($config_name) {
  $config_path = drupal_get_path('module', 'bt_store_cl') . '/inc';
  $source = new FileStorage($config_path);
  $config_storage = \Drupal::service('config.storage');
  $config_storage->write($config_name, $source->read($config_name));
}